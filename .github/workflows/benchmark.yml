name: Ejecutar Benchmarks

on: [push, pull_request]

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Instalar dependencias necesarias
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk nodejs npm python3 python3-pip cargo golang-go

      - name: Ejecutar benchmarks
        run: |
          declare -A tiempos

          # Funci√≥n para medir tiempo
          medir_tiempo() {
            local inicio=$(date +%s%N)
            eval "$1"
            local fin=$(date +%s%N)
            echo $(((fin - inicio) / 1000000))  # Devuelve milisegundos
          }

          # Ejecutar en cada lenguaje
          
          # C++
          cd C++ && g++ solve.cpp -o solve && tiempos["C++"]=$(medir_tiempo "./solve") && cd ..
          
          # Go
          cd Go && go build solve.go && tiempos["Go"]=$(medir_tiempo "./solve") && cd ..
          
          # Java
          cd Java && javac solve.java && tiempos["Java"]=$(medir_tiempo "java solve") && cd ..
          
          # JavaScript
          cd Javascript && tiempos["Javascript"]=$(medir_tiempo "node solve.js") && cd ..
          
          # Python
          cd Python && tiempos["Python"]=$(medir_tiempo "python3 solve.py") && cd ..
          
          # Rust
          cd Rust && cargo build --release && chmod +x ./target/release/solve && tiempos["Rust"]=$(medir_tiempo "./target/release/solve") && cd ..
          
          # Mostrar resultados
          echo "Resultados de Benchmark:"
          for lang in "${!tiempos[@]}"; do
            echo "$lang: ${tiempos[$lang]} ms"
          done
